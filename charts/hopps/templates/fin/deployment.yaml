apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hopps.finFullname" . }}
  labels:
    {{- include "hopps.finLabels" . | nindent 4 }}
spec:
  {{- if not .Values.fin.autoscaling.enabled }}
  replicas: {{ .Values.fin.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "hopps.finSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.fin.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "hopps.finSelectorLabels" . | nindent 8 }}
        {{- with .Values.fin.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- if or .Values.global.imagePullSecrets .Values.fin.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.global.imagePullSecrets | nindent 8 }}
        {{- toYaml .Values.fin.imagePullSecrets | nindent 8 }}
      {{- end }}
      {{- if .Values.fin.serviceAccount.create }}
      serviceAccountName: {{ .Values.fin.serviceAccount.name | default (include "hopps.finFullname" .) }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.fin.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          env:
            {{- if .Values.fin.envVars }}
            {{- toYaml .Values.fin.envVars | nindent 12 }}
            {{- end }}
            {{- if .Values.openfgaEnabled }}
            - name: QUARKUS_OPENFGA_URL
              value: http://{{ .Release.Name }}-openfga:8080
            {{- end }}
            {{- if .Values.kafka.enabled }}
            - name: kafka.bootstrap.servers
              value: {{ .Release.Name }}-kafka:9092
            {{- end }}
            # fin-narrator
            - name: HOPPS_FIN_NARRATOR_SERVICE_URL
              value: http://{{ .Release.Name }}-fin-narrator:8080/
            # az-document-ai
            - name: HOPPS_DOCUMENT_ANALYSIS_SERVICE_URL
              value: http://{{ .Release.Name }}-az-document-ai:8080/
          securityContext:
            {{- toYaml .Values.fin.securityContext | nindent 12 }}
          image: "{{ .Values.fin.image.repository }}:{{ .Values.fin.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.fin.image.pullPolicy }}
          {{- with .Values.fin.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.fin.service.port }}
              protocol: TCP
            - name: management
              containerPort: 9000
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.fin.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.fin.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.fin.resources | nindent 12 }}
          {{- with .Values.fin.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.fin.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.fin.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.fin.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.fin.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
