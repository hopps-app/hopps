name: api-client

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.2.3)'
        required: true
        type: string

jobs:
  build-and-publish:
    name: Build and publish @hopps/api-client
    runs-on: ubuntu-latest
    # Run the job inside a Docker container to satisfy the "build in a docker container" requirement
    container: mcr.microsoft.com/dotnet/sdk:8.0
    permissions:
      contents: write

    defaults:
      run:
        shell: bash
        working-directory: frontend/api-client

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install Node.js 20.x inside container
        run: |
          apt-get update
          apt-get install -y curl ca-certificates gnupg
          curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
          apt-get install -y nodejs
          node -v
          corepack enable
          corepack prepare pnpm@latest --activate
          pnpm -v
          dotnet --info

      - name: Set package version from input
        run: |
          pnpm version "${{ inputs.version }}" --no-git-tag-version

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Generate Org Service client (NSwag)
        run: pnpm run generate:org-service

      - name: Build package
        run: pnpm run build

#      - name: Commit and push generated OrgService changes
#        if: startsWith(github.ref, 'refs/heads/')
#        env:
#          BRANCH_NAME: ${{ github.ref_name }}
#        run: |
#          git add src/services/OrgService.ts package.json || true
#          if ! git diff --cached --quiet; then
#            git commit -m "chore(api-client): update OrgService and version v${{ inputs.version }}"
#            git push origin HEAD:${BRANCH_NAME}
#          else
#            echo "No changes to commit."
#          fi

      - name: Configure npm auth for npmjs.org
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > $HOME/.npmrc

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm run publish
