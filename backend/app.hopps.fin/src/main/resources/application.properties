#######################################
# Quarkus
#######################################
quarkus.banner.path=banner.txt
%dev.quarkus.http.port=8102
%prod.quarkus.management.enabled=true
quarkus.smallrye-openapi.store-schema-directory=target/openapi
app.hopps.fin.url=http://localhost:8102
#
quarkus.http.auth.permission.rest.paths=*
quarkus.http.auth.permission.rest.policy=authenticated
quarkus.http.auth.permission.management.paths=/q*
quarkus.http.auth.permission.management.policy=permit
%dev.quarkus.http.cors=true
%dev.quarkus.http.cors.origins=*
#
########################################
# Hibernate
########################################
%dev.quarkus.datasource.devservices.port=5678
#
########################################
# Flyway
########################################
quarkus.flyway.migrate-at-start=true
quarkus.flyway.baseline-on-migrate=true
quarkus.flyway.baseline-version=0.0.1
%dev,test.quarkus.flyway.clean-at-start=true
%dev.quarkus.flyway.locations=db/migration,db/testdata
#
########################################
# Keycloak/auth
########################################
%prod.quarkus.keycloak.devservices.enabled=false
%dev.quarkus.keycloak.devservices.port=8554
%dev.quarkus.keycloak.devservices.realm-name=quarkus
#
######################################
# OpenFGA
######################################
quarkus.openfga.store=${HOPPS_OPENFGA_STORE:hopps}
quarkus.zanzibar.filter.deny-unannotated-resource-methods=false
#
quarkus.openfga.devservices.authorization-model-location=fga/schema.json
quarkus.openfga.devservices.store-name=${quarkus.openfga.store}
%dev.quarkus.openfga.devservices.http-port=8557
#
######################################
# Kafka
######################################
%dev.quarkus.kafka.devservices.port=32782
#
mp.messaging.incoming.invoices.connector=smallrye-kafka
mp.messaging.incoming.invoices.topic=app.hopps.documents.invoice-data
mp.messaging.incoming.invoices.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.invoices.cloud-events=true
mp.messaging.incoming.invoices.cloud-events-mode=binary
#
mp.messaging.incoming.receipts.connector=smallrye-kafka
mp.messaging.incoming.receipts.topic=app.hopps.documents.receipt-data
mp.messaging.incoming.receipts.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.receipts.cloud-events=true
mp.messaging.incoming.receipts.cloud-events-mode=binary
#
mp.messaging.outgoing.document-out.connector=smallrye-kafka
mp.messaging.outgoing.document-out.topic=app.hopps.documents.images
#
#####################################
# REST-CLIENT Org
#####################################
%test.quarkus.rest-client.org-service.uri=http://localhost:${quarkus.wiremock.devservices.port}
quarkus.rest-client.org-service.uri=http://localhost:8101
org.eclipse.microprofile.rest.client.propagateHeaders=Authorization
######################################
# REST-Client document tagging
######################################
quarkus.rest-client.fin-narrator.uri=${HOPPS_FIN_NARRATOR_SERVICE_URL}
%dev.quarkus.rest-client.fin-narrator.uri=http://localhost:8775
%test.quarkus.rest-client.fin-narrator.uri=http://localhost:${quarkus.wiremock.devservices.port}
#####################################
# REST-CLIENT document analysis service
#####################################
quarkus.rest-client.document-analysis.url=${HOPPS_DOCUMENT_ANALYSIS_SERVICE_URL}
%dev,test.quarkus.rest-client.document-analysis.url=http://localhost:8100/api/az-document-ai
#
######################################
# S3
######################################
app.hopps.fin.bucket.name=documents
quarkus.s3.path-style-access=true
######################################
# Document caching
######################################
# keep at most this amount of items in memory - this is low because each entry might be multiple MB's in size.
quarkus.cache.caffeine.document-cache.maximum-size=50
